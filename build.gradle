plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'dev.latestion'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven { url 'https://jitpack.io' }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20-R0.1-SNAPSHOT"
    compileOnly("de.tr7zw:item-nbt-api-plugin:2.11.2")

    // lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'

    compileOnly "com.github.MilkBowl:VaultAPI:1.7"

    // Redis
    implementation 'redis.clients:jedis:4.2.3'

    // local
    compileOnly fileTree(include: ['*.jar'], dir: 'libs')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    // Relocate (shade) the Redis package
    relocate 'redis.clients.jedis', 'your.package.redis.clients.jedis'
    archiveClassifier.set('all')
    destinationDirectory.set(file('C:\\Users\\User\\Desktop\\Dungeons\\plugins'))
    archiveFileName.set("MarketPlace-${version}.jar")

}

build.dependsOn shadowJar